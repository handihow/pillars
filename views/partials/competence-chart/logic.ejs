<script>
	$(document).ready(function() {
		
		$('#nonactive-content').hide();

		if($('#pdf__progress').length>0){
	        $('#pdf__progress').hide(); 
	    }

	    $('#cmd').click(async function() {
	        $('.buttons').hide();
	        $('#pdf__progress').show();
	        var pdf = new jsPDF('l', 'mm', 'a4', true);
	        var pages = $(".pdf__page");
	        console.log(pages.length);
	        $('#pdf__progress').progress({
	          total: 1
	        });
	        for (var i = 0; i < pages.length; i++) {
	          $('#pdf__progress').progress('increment');
	          var canvas = await html2canvas(pages[i]);
	          if(i>0){
	              pdf.addPage();
	          }
	          var imgData = canvas.toDataURL('image/png');
	          var imgProps= pdf.getImageProperties(imgData);
	          var pdfWidth = pdf.internal.pageSize.getWidth();
	          var pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
	          pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight, undefined, 'FAST');
	        }
	        pdf.save("Pillars Medewerkers Score Rapport.pdf");
	        $('#pdf__progress').progress('increment');
	        $('.buttons').show();
	         $('#pdf__progress').hide();
	    });

		var surveysInfo = $( '#surveysInfo' ).text();

		var surveys = JSON.parse(surveysInfo || '[]');

		var resultsInfo = $( '#resultsInfo' ).text();

		var results = JSON.parse(resultsInfo || '[]');

		var averages = results.map(r => r.average);

		var comparingAverages = results.map(r => r.comparingAverage);

		surveys.forEach(function(survey, index){
			if(averages[index] && $('#'+index.toString()).length>0){
				var data = [
				  {
				    type: "indicator",
				    mode: "number+gauge+delta",
				    number: { suffix: ' %' },
				    gauge: { 
				    	shape: "bullet",
				    	axis: {
					        visible: true,
					        range: [0, 100]
					    },
					    bar: {
					    	color: averages[index] > survey.minimumLevel ? '#009FE3' : '#E30613'
					    }
				    },
				    delta: { reference: comparingAverages[index], relative: false },
				    value: averages[index],
				    domain: { x: [0, 1], y: [0, 1] },
				    title: { text: 'Test ' + (index + 1) }
				  }
				];
				// var layout = { width: 500, height: 250 };
				var layout = {
				  width: 450,
				  height: 100,
				  margin: { t: 10, b: 25, l: 5, r: 0 }
				};

				var config = {
			      displayModeBar: false,
			      staticPlot: true,
			      responsive: true
			    };

				Plotly.newPlot(index.toString(), data, layout, config);
			}
			
		});

	    $('#hideshow').on('click', function(event) {        
	         $('#nonactive-content').toggle('show');
	    });
	
	});
</script>