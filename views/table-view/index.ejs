<%- include('../partials/header') %>
<%- include('../partials/main-menu') %>
<%- include('../partials/flash-message') %>
<%if(typeof school !== 'undefined'){%>
  <%- include('../partials/school-header') %>
  <%- include('../' +header +'/header')  %>
<%} else if(typeof organisation !== 'undefined'){%>
  <%- include('../partials/organisation-header') %>
  <%- include('../overview/' + header +'-header')  %>
<%} else {%>
  <%- include('../partials/admin-header') %>
<%}%>


  <div class="ui placeholder segment" id="loader">
    <div class="ui active inverted dimmer">
      <div class="ui text loader">Laden..</div>
    </div>
    <p></p>
  </div>
  <div id="tableContainer">
    
    <table class="ui celled small blue table" id="dynamicTable">
        <thead>
          <tr>
            <th></th>
            <th></th>
            <%if(typeof organisation !== 'undefined'){%>
              <th></th>
            <%}%>
            <%columns.forEach(column => { %>
              <th></th>
            <% }) %>
            <%if(hasWarningRow){%><th></th><%}%>
          </tr>
        </thead>
        <tbody id="dynamicTableBody"></tbody>
    </table>
  </div>

<div id="columnData" hidden><%=JSON.stringify(columns)%></div>
<div id="itemsData" hidden><%=JSON.stringify(items)%></div>
<div id="warningRowData" hidden><%=hasWarningRow !== 'undefined' && hasWarningRow ? 'true' : 'false'%></div>
<div id="allowNewEntriesData" hidden><%= typeof allowNewEntries !== 'undefined' && allowNewEntries ? 'true' : 'false'%></div>
<div id="emailData" hidden><%= typeof email !== 'undefined' && email ? 'true' : 'false'%></div>
<div id="headerData" hidden><%=header%></div>
<div id="organisationData" hidden><%=typeof organisation !== 'undefined' ? JSON.stringify(organisation) : ''%></div>
<div id="schoolData" hidden><%=typeof school !== 'undefined' ? JSON.stringify(school) : '' %></div>

<div class="ui modal" id="compose-email-modal">
  <i class="close icon"></i>
  <div class="header">
    Stap 1. Maak bericht voor verzenden naar <span class='numberOfEmailRespondents'></span> email adres(sen)
  </div>
  <div class="content">
    <h4>Naar</h4>
    <div class="emailAddressInfo"></div>
    <h4>Selecteer template</h4>
    <div class="ui buttons">
      <button class="ui button" id="invitationEmailBtn">Uitnodigen</button>
      <button class="ui button" id="reminderEmailBtn">Herinneren</button>
      <button class="ui button" id="newAccountBtn">Nieuw account</button>
      <button class="ui button" id="emptyEmailBtn">Lege email</button>
    </div>
    <form class="ui form">
      <div class="required field">
        <label>Onderwerp</label>  
        <input id="emailSubject">
      </div>
      <div class="required field">
          <label>Bericht</label>  
          <textarea id="emailBody"></textarea>
      </div>
    </form>
  </div>
  <div class="actions">
    <div class="ui positive approve right labeled icon button" id="btn-modal-1">
      Naar stap 2: verzenden
      <i class="checkmark icon"></i>
    </div>
  </div>
</div>

<div class="ui modal" id="confirm-send-email-modal">
  <i class="close icon"></i>
  <div class="header">
    Stap 2. Bevestig bericht voor verzenden naar <span class='numberOfEmailRespondents'></span> email adres(sen)
  </div>
  <div class="content">
    <h4>Naar</h4>
    <div class="emailAddressInfo"></div>
    <h4>Onderwerp</h4>
    <div id="emailSubjectConfirm"></div>
    <h4>Bericht</h4>
    <div id="emailBodyConfirm"></div>
  </div>
  <div class="actions">
    <div class="ui positive approve right labeled icon button">
      Verzenden
      <i class="checkmark icon"></i>
    </div>
  </div>
</div>

<%if(typeof school !== 'undefined'){%>
  <%- include('../partials/school-footer') %>
<%} else if(typeof organisation !== 'undefined'){%>
  <%- include('../partials/organisation-footer') %>
<%} else {%>
  <%- include('../partials/admin-footer') %>
<%}%>
<%- include('../partials/footer') %>

<script>

  var editor; // use a global for the submit and return data rendering in the examples
 
  $(document).ready(function() {

    var columnText = $('#columnData').text();
    var columnData = JSON.parse(columnText);

    var header = $('#headerData').text();

    var itemsText = $('#itemsData').text();
    var itemsData = JSON.parse(itemsText);

    var schoolText = $('#schoolData').text();
    var schoolData = schoolText.length>0 ? JSON.parse(schoolText) : null;
    

    var hasWarningRowText = $('#warningRowData').text();
    var hasWarningRow = hasWarningRowText === "true" ? true : false;
    var warningRowIndex = 0;
    if(hasWarningRow){
      warningRowIndex = columnData.findIndex(c => c.id === 'warning');
    }

    var allowNewEntriesText = $('#allowNewEntriesData').text();
    var allowNewEntries = allowNewEntriesText === "true" ? true : false;

    var emailText = $('#emailData').text();
    var email = emailText === "true" ? true : false;

    var organisationText = $('#organisationData').text();
    var organisationData = organisationText.length>0 ? JSON.parse(organisationText) : null;
    var hasOrganisation = organisationText.length>0  ? true : false;

    var roleRowIndex = 3;
    if(hasOrganisation && header !== 'school'){
      roleRowIndex = 4;
    }

    var urlParams = new URLSearchParams(window.location.search);
    var searchParam = ""
    if(urlParams.has('type')){
      searchParam = urlParams.get('type')
    }

    var tableColumns = [
      {
         'targets': 0,
         'checkboxes': {
            'selectRow': true
         },
         data: '_id'
      },
      {
          data: null,
          sTitle: 'Record',
          className: 'selectable',
          orderable: false,
          bVisible: true,
          render: function ( data, type, row ) {
            if(typeof data.publicProfile !== 'undefined' && !data.publicProfile){
              return '<a>Prive</a>'
            } else if(header === 'school'){
              return '<a href="/' + header + 's/' + data._id + '">Bekijk</a>';
            } else {
              return '<a href="/' + header + '/' + data._id + '">Bekijk</a>';
            }
          }
      }
    ];

    var fields = [];

    if(hasOrganisation && header !== 'school'){
      tableColumns.push({
        data: 'schoolName',
        sTitle: 'Instellingsnaam',
        className: 'disabled',
        bVisible: true
      });
      fields.push({
        label: 'Instellingsnaam',
        name: 'schoolName',
        type: "readonly"
      })
    }
    
    columnData.forEach(function(column){
      if(column.id === 'role'){
        tableColumns.push({
          data: column.id,
          sTitle: column.short,
          bVisible: !column.hidden,
          render: function ( data, type, row ) {
              if(row.role === 'student'){
                return "<div class='ui mini blue label'>Leerling</div>"
              } else if(row.role === 'suser'){
                return "<div class='ui mini orange label'>School medewerker</div>"
              } else if(row.role === 'sadmin'){
                return "<div class='ui mini yellow label'>School admin</div>"
              } else if(row.role === 'buser'){
                return "<div class='ui mini olive label'>Bestuur medewerker</div>"
              } else if(row.role === 'badmin'){
                return "<div class='ui mini green label'>Bestuur admin</div>"
              } else {
                return "<div class='ui mini teal label'>Pillars admin</div>"
              }
            }
        });
      } else {
        tableColumns.push({
          data: column.id,
          sTitle: column.short,
          bVisible: !column.hidden
        });  
      }
      if(column.standardValueFieldType && column.standardValueFieldType === 'select'){
        var options = [];
        column.standardValueOptions.forEach(function(option){
          options.push({
            label: option.label ? option.label : option,
            value: option.value ? option.value : option,
          })
        })        
        fields.push({
          label: column.description,
          name: column.id,
          type:  "select",
          multiple: column.multiselect ? true : false,
          options: options
        })
      } else {
        fields.push({
          label: column.description,
          name: column.id
        })
      }
     })

    if(hasWarningRow){
      tableColumns.push({
        data: 'warning',
        sTitle: 'Waarschuwing',
        className: 'disabled',
      });
      fields.push({
        label: 'Waarschuwing',
        name: 'warning',
        type: "readonly"
      })
    }

    editor = new $.fn.dataTable.Editor( {
        table: "#dynamicTable",
        idSrc:  '_id',
        ajax: {
          url: '/api/tableeditor',
          data: {
            collectionId: header,
            schoolId: schoolData ? schoolData._id : null,
            organisationId: header === 'school' ? organisationData._id : null
          }
        },
        fields: fields,
        i18n: {
            create: {
                button: "Voeg toe",
                title:  "Item toevoegen",
                submit: "Bewaar"
            },
            edit: {
                button: "Bewerk",
                title:  "Item bewerken",
                submit: "Bewaar"
            },
            remove: {
                button: "Verwijder",
                title:  "Item verwijderen",
                submit: "Definitief verwijderen",
                confirm: {
                    _: "Wilt %d rijen definitief verwijderen?",
                    1: "Wil je 1 rij definitief verwijderen?"
                }
            },
            error: {
                system: "Er is een fout opgetreden. Neem contact op met de admin."
            }
        }
    } );

    // Activate an inline edit on click of a table cell
    $('#dynamicTable')
    .on( 'click', 'tbody td:not(:first-child)', function (e) {
        editor.inline( this, {
          onBlur: 'submit'
        } );
    });

    var buttons = [        
        { extend: "edit",   editor: editor },
        { extend: "remove", editor: editor },
        'colvis',
        'excel',
      ];

    if(allowNewEntries){
      buttons.unshift({
        extend: 'create', editor: editor
      })
    }

    if(email){
      buttons.push({
              extend: 'selected',
              editor: editor,
              action: function ( e, dt, node, config ) {
                  var rows = dt.rows( { selected: true } ).data();

                  var emailArr = [];
                  for(var i=0; i<rows.length; i++){
                    emailArr.push(rows[i].username);
                  }

                  var emailTxt = '';

                  if(emailArr.length < 3){
                    emailTxt = emailArr.join(', ');
                  } else {
                    emailTxt = emailArr.slice(0,3).join(', ') + ' en nog ' + (emailArr.length - 3).toString() + ' andere'
                  }

                  $('.emailAddressInfo').text(emailTxt);
                  $('.numberOfEmailRespondents').text(rows.length);

                  var invitationEmailSubject = 'Uitnodiging test ICT vaardigheden Pillars'

                  var invitationEmailBody = 
                  `<h4>Uitnodiging ICT vaardigheden test</h4>
                  <p>De directie van jouw school heeft je uitgenodigd om een ICT vaardigheden test te doen op Pillars.
                  We vragen je om in te loggen op de <a href="https://app.pillars.school/login">Pillars website</a>
                  met jouw schoolaccount. Gebruik hiervoor de knoppen Google / Microsoft of stel een wachtwoord in.</p>
                  <p></p>
                  <p>Pillars helpt jouw school met het complexe vraagstuk rondom ICT en onderwijs.
                  Een belangrijk onderdeel hiervan is het testen van de digitale vaardigheden van medewerkers op school.</p>
                  <p></p>
                  <p>Voor meer informatie, bekijk aub het <a href="https://youtu.be/CZd81ncn2oA">YouTube introductiefilmje Pillars</a>.</p>
                  <p></p>
                  <p>Met vriendelijke groeten,</p>
                  <p></p>
                  <p><strong>Team Pillars</strong></p>`

                  var reminderEmailSubject = 'Herinnering test ICT vaardigheden Pillars'

                  var reminderEmailBody = 
                  `<h4>Herinnering ICT vaardigheden test</h4>
                  <p>De directie van jouw school heeft je eerder uitgenodigd om een ICT vaardigheden test te doen op Pillars.
                  We vragen je om in te loggen op de <a href="https://app.pillars.school/login">Pillars website</a>
                  met jouw schoolaccount. Gebruik hiervoor de knoppen Google / Microsoft of stel een wachtwoord in.</p>
                  <p></p>
                  <p>Pillars helpt jouw school met het complexe vraagstuk rondom ICT en onderwijs.
                  Een belangrijk onderdeel hiervan is het testen van de digitale vaardigheden van medewerkers op school.</p>
                  <p></p>
                  <p>Voor meer informatie, bekijk aub het <a href="https://youtu.be/CZd81ncn2oA">YouTube introductiefilmje Pillars</a>.</p>
                  <p></p>
                  <p>Met vriendelijke groeten,</p>
                  <p></p>
                  <p><strong>Team Pillars</strong></p>`

                  var welcomeEmailSubject = 'Welkom bij Pillars!'

                  var welcomeEmailBody = 
                  `<h4>Welkom bij Pillars!</h4>
                  <p>De directie van jouw school heeft je uitgenodigd om deel te nemen aan Pillars.
                  We vragen je om in te loggen op de <a href="https://app.pillars.school/login">Pillars website</a>
                  met jouw schoolaccount. Gebruik hiervoor de knoppen Google / Microsoft of stel een wachtwoord in.</p>
                  <p></p>
                  <p>Pillars helpt jouw school met het complexe vraagstuk rondom ICT en onderwijs.
                  Een belangrijk onderdeel hiervan is het testen van de digitale vaardigheden van medewerkers op school.</p>
                  <p></p>
                  <p>Voor meer informatie, bekijk aub het <a href="https://youtu.be/CZd81ncn2oA">YouTube introductiefilmje Pillars</a>.</p>
                  <p></p>
                  <p>Met vriendelijke groeten,</p>
                  <p></p>
                  <p><strong>Team Pillars</strong></p>`

                  var emailBody = invitationEmailBody;
                  var emailSubject = invitationEmailSubject;
                  
                  $('textarea#emailBody').tinymce({
                      script_url : 'https://cloud.tinymce.com/stable/tinymce.min.js?apiKey=d4xdezp2zrecxro0s9vxbmnaah075az3ag0kutbsoj6c46m4',
                      selector: 'textarea#emailSubject',  // change this value according to your HTML
                      branding: false,
                      menubar: false,
                      plugins: "link",
                      toolbar: "undo redo | styleselect | bold italic | link",
                      setup : function(editor) {
                        editor.on('init', function (e) {
                          editor.setContent(invitationEmailBody);
                        });
                        editor.on("change", function(){
                            emailBody = tinymce.activeEditor.getContent();
                        });
                      }
                  });

                  $('#emailSubject').val(invitationEmailSubject);

                  $('#invitationEmailBtn').click(function(){
                    $('#emailSubject').val(invitationEmailSubject)
                    tinymce.activeEditor.setContent(invitationEmailBody);
                  });

                  $('#reminderEmailBtn').click(function(){
                    $('#emailSubject').val(reminderEmailSubject)
                    tinymce.activeEditor.setContent(reminderEmailBody);
                  });

                  $('#newAccountBtn').click(function(){
                    $('#emailSubject').val(welcomeEmailSubject)
                    tinymce.activeEditor.setContent(welcomeEmailBody);
                  });

                  $('#emptyEmailBtn').click(function(){
                    $('#emailSubject').val('')
                    tinymce.activeEditor.setContent('');
                  });

                  $('#compose-email-modal')
                  .modal({
                    allowMultiple: false,
                    closable: true,
                    onApprove : function() {
                      emailSubject = $('#emailSubject').val();
                      emailBody = tinymce.activeEditor.getContent();
                      $('#emailSubjectConfirm').text(emailSubject);
                      $('#emailBodyConfirm').html(emailBody);
                      return true;
                    }
                  })
                  .modal('show');

                  $('#confirm-send-email-modal')
                  .modal('attach events', '#btn-modal-1')
                  .modal({
                    closable: true,
                    onApprove: function(){
                      if(emailBody.length === 0 || emailSubject.length === 0 || emailArr.length === 0){
                        alert('Geen ontvangers of onderwerp / bericht is leeg... Probeer het opnieuw');
                      } else {
                        $.ajax({
                          url: '/api/emails',
                          type: 'POST',
                          contentType: 'application/json',
                          data: JSON.stringify({
                            emailarray: emailArr,
                            emailsubject: emailSubject,
                            emailbody: emailBody
                          }),
                          success: function(response){
                            if(response.success){
                              alert('Emails verstuurd!');
                              return true;
                            } else {
                              alert('Fout bij het verzenden van emails ...' + response.message);
                              return false;
                            }
                            
                          },
                          error: function(error){
                            alert('Fout bij het verzenden van emails ...' + error.errorThrown);
                            return false;
                          }
                        })
                      }
                    }
                  })
              }
          });
    }


    var dataTableSettings = {
      search: {
        search: searchParam
      },
      pageLength: 25,
      select: {
          style:    'multi',
          selector: 'td:first-child'
      },
      keys: {
          columns: ':not(:first-child)',
          editor:  editor
      },
      'order': [[2, 'asc']],
      buttons: buttons,
      dom: 'Bfrtip',
      "language": {
        "sProcessing": "Bezig...",
        "sLengthMenu": "_MENU_ resultaten weergeven",
        "sZeroRecords": "Geen resultaten gevonden",
        "sInfo": "_START_ tot _END_ van _TOTAL_ resultaten",
        "sInfoEmpty": "Geen resultaten om weer te geven",
        "sInfoFiltered": " (gefilterd uit _MAX_ resultaten)",
        "sInfoPostFix": "",
        "sSearch": "Zoeken:",
        "sEmptyTable": "Geen resultaten aanwezig in de tabel",
        "sInfoThousands": ".",
        "sLoadingRecords": "Een moment geduld aub - bezig met laden...",
        "oPaginate": {
          "sFirst": "Eerste",
          "sLast": "Laatste",
          "sNext": "Volgende",
          "sPrevious": "Vorige"
        },
        "oAria": {
          "sSortAscending":  ": activeer om kolom oplopend te sorteren",
          "sSortDescending": ": activeer om kolom aflopend te sorteren"
        },
        "buttons": {
          "colvis": "Zichtbare kolommen"
        },
        "select" : {
            "rows": {
                _: "Je hebt %d rijen geselecteerd",
                0: "Klik op de checkbox om een rij te selecteren, of gebruik de checkbox 'Selecteer alles' links bovenaan in de tabel",
                1: "Je hebt 1 rij geselecteerd"
            }
        }
      }
    };

    if(email){
      dataTableSettings.language.buttons.selected = 'Emailen';
    }

    var table = $("#dynamicTable").DataTable({
        ...dataTableSettings,
        rowCallback: function(row, data){
          if(data.warning && data.warning.length>0){
            if(data.warning === 'Apparaat is volgend jaar afgeschreven'){
              $("td:eq(" + warningRowIndex + ")",row).addClass("warning");
            } else {
              $("td:eq(" + warningRowIndex + ")",row).addClass("negative");
            }
          }
        },
        columns: tableColumns,
        data: itemsData,
     });


    table.on("click", "th.select-checkbox", function() {
        if ($("th.select-checkbox").hasClass("selected")) {
            table.rows().deselect();
            $("th.select-checkbox").removeClass("selected");
        } else {
            table.rows().select();
            $("th.select-checkbox").addClass("selected");
        }
    }).on("select deselect", function() {
        if (table.rows({
                selected: true
            }).count() !== table.rows().count()) {
            $("th.select-checkbox").removeClass("selected");
        } else {
            $("th.select-checkbox").addClass("selected");
        }
    });

    $('#loader').hide();

  });

</script>
