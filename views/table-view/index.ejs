<% include ../partials/header %>
<% include ../partials/main-menu %>
<% include ../partials/flash-message %>
<% include ../partials/school-header %>
<%- include('../' +header +'/header')  %>

<div class="ui segment">
  <div id="tableContainer">
    <table class="ui celled small table" id="dynamicTable">
        <thead>
          <tr>
            <th></th>
            <%columns.forEach(column => { %>
              <th></th>
            <% }) %>
            <%if(hasWarningRow){%><th></th><%}%>
          </tr>
        </thead>
        <tbody id="dynamicTableBody"></tbody>
    </table>
  </div>
</div>

<div id="columnData" hidden><%=JSON.stringify(columns)%></div>
<div id="itemsData" hidden><%=JSON.stringify(items)%></div>
<div id="warningRowData" hidden><%=JSON.stringify(hasWarningRow)%></div>
<div id="headerData" hidden><%=header%></div>

<% include ../partials/school-footer %>
<% include ../partials/footer %>

<script>

  var editor; // use a global for the submit and return data rendering in the examples
 
  $(document).ready(function() {

    var columnText = $('#columnData').text();
    var columnData = JSON.parse(columnText);

    var itemsText = $('#itemsData').text();
    var itemsData = JSON.parse(itemsText);

    var hasWarningRowText = $('#warningRowData').text();
    var hasWarningRow = hasWarningRowText === "true" ? true : false;

    var header = $('#headerData').text();

    var urlParams = new URLSearchParams(window.location.search);
    var searchParam = ""
    if(urlParams.has('type')){
      searchParam = urlParams.get('type')
    }

    var tableColumns = [{
        data: null,
        defaultContent: '',
        className: 'select-checkbox',
        orderable: false
    }];
    var fields = [];
    
    columnData.forEach(function(column){
      tableColumns.push({
        data: column.id,
        sTitle: column.short,
        bVisible: !column.hidden
      });
      if(column.standardValueFieldType && column.standardValueFieldType === 'select'){
        var options = [];
        column.standardValueOptions.forEach(function(option){
          options.push({
            label: option,
            value: option
          })
        })        
        fields.push({
          label: column.description,
          name: column.id,
          type:  "select",
          options: options
        })
      } else {
        fields.push({
          label: column.description,
          name: column.id
        })
      }
      
     })

    if(hasWarningRow){
      tableColumns.push({
        data: 'warning',
        sTitle: 'Waarschuwing'
      });
      fields.push({
        label: 'Waarschuwing',
        name: 'warning',
        type: "readonly"
      })
    }

    editor = new $.fn.dataTable.Editor( {
        table: "#dynamicTable",
        idSrc:  '_id',
        fields: fields,
        i18n: {
            edit: {
                button: "Bewerk",
                title:  "Item bewerken",
                submit: "Bewaar"
            },
            remove: {
                button: "Verwijder",
                title:  "Item verwijderen",
                submit: "Definitief verwijderen",
                confirm: {
                    _: "Wilt %d rijen definitief verwijderen?",
                    1: "Wil je 1 rij definitief verwijderen?"
                }
            },
            error: {
                system: "Er is een fout opgetreden. Neem contact op met de admin."
            }
        }
    } );

    // Activate an inline edit on click of a table cell
    $('#dynamicTable')
    .on( 'click', 'tbody td:not(:first-child)', function (e) {
        editor.inline( this, {
          onBlur: 'submit'
        } );
    });

    editor.on('preSubmit', function(e, data, action){
          data.collectionId = header;
          console.log(action);
          $.ajax({
            url: '/api/tableeditor',
            type: action === 'edit' ? 'PUT' : 'DELETE',
            data: data
          })
    });

    var dataTableSettings = {
      search: {
        search: searchParam
      },
      pageLength: 25,
      select: {
          style:    'multi',
          selector: 'td:first-child'
      },
      keys: {
          columns: ':not(:first-child)',
          editor:  editor
      },
      buttons: [
        'copy', 
        'excel',
        'print', 
        'colvis',
        'selectAll',
        'selectNone',
        { extend: "edit",   editor: editor },
        { extend: "remove", editor: editor }
      ],
      dom: 'Bfrtip',
      "language": {
        "sProcessing": "Bezig...",
        "sLengthMenu": "_MENU_ resultaten weergeven",
        "sZeroRecords": "Geen resultaten gevonden",
        "sInfo": "_START_ tot _END_ van _TOTAL_ resultaten",
        "sInfoEmpty": "Geen resultaten om weer te geven",
        "sInfoFiltered": " (gefilterd uit _MAX_ resultaten)",
        "sInfoPostFix": "",
        "sSearch": "Zoeken:",
        "sEmptyTable": "Geen resultaten aanwezig in de tabel",
        "sInfoThousands": ".",
        "sLoadingRecords": "Een moment geduld aub - bezig met laden...",
        "oPaginate": {
          "sFirst": "Eerste",
          "sLast": "Laatste",
          "sNext": "Volgende",
          "sPrevious": "Vorige"
        },
        "oAria": {
          "sSortAscending":  ": activeer om kolom oplopend te sorteren",
          "sSortDescending": ": activeer om kolom aflopend te sorteren"
        },
        "buttons": {
          "colvis": "Zichtbare kolommen",
          "selectAll": 'Selecteer alles',
          "selectNone": 'Deselecteer alles'
        },
        "select" : {
            "rows": {
                _: "Je hebt %d rijen geselecteerd",
                0: "Klik op de checkbox om een rij te selecteren, of gebruik de knop 'Selecteer alles'",
                1: "Je hebt 1 rij geselecteerd"
            }
        }
      }
    };

    var table = $("#dynamicTable").DataTable({
        ...dataTableSettings,
        rowCallback: function(row, data){
          if(data.warning && data.warning.length>0){
            $(row).addClass("negative");
          }
        },
        columns: tableColumns,
        data: itemsData,
     });

  });

</script>
